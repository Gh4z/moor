***WORK IN PROGRESS***

Moor - PHP 5 Routing/Controller Library

        AUTHOR: Jeff Turcotte
    DISCLAIMER: This is alpha software and is not recommended for production use.
       LICENSE: MIT (see LICENSE for more details).

    1) Introduction
    2) Hello World
    3) Param Matching & Extraction
    4) MoorController


-- 1 -- Introduction


    Moor...
        - is a small library for PHP 5
        - lets you define resources with a simple URL => callback mapping
        - can take many shapes and be configured in many ways.
        - would encourage you to keep things RESTful, but it's up to you
    
    Moor is broken up into 2 separate pieces:

    Moor.php
        The URL router. Matches a URL pattern, extracts 
        defined parameters from it, and runs a callback.

    MoorController.php
        A Rails-esque controller extension for Moor. Not required,
        but worthwhile on larger projects.
    

-- 2 -- Hello World

    Moor::map('/', 'hello');
    Moor::run();

    function hello() {
        echo 'hello world';
    }	
    
    -- OR --
    
    (if you're lucky enough to be on PHP 5.3)
    
    Moor::map('/', function() {
        echo '<h1>hello world</h1>';
    });

	Moor::run();
    

-- 3 -- Param Matching & Extraction


    Moor can extract parameters from your URLs. Prefixes determine what kind of match
    to accept:
    
        # => a numeric value
        @ => an alpha value, including underscores and dashes
        : => an alphanumeric value, including underscores and dashes
    
    Moor::map('/user/#id', 'User::read');
        will match the digit id and extract it to $_GET or $_POST depending on your 
        request method. i.e. GET /user/5 will yield $_GET['id'] == '5' and run the 
        static method callback User::read.
        
        other urls that will be matched by this pattern:
            /user/200
            /user/200-john
            /user/6053qwerty
    
    Moor::map('/user/@action$', 'add_user');
        will match the alpha action. i.e. POST /user/add will yield
        $_POST['action'] == 'add' and run the global function callback add_user
        
        * the $ at the end of the matcher specifies that we don't want to allow any 
          type of slug after this point. Only an extact match will be accepted.
     
    There are a few suffix operators as well:
    
        {n,n} => a traditional regex range
            $ => a traditional regex end delimiter, to enable exact matches and disallow slugs
    
    
-- 4 -- MoorController

Coming Soon.